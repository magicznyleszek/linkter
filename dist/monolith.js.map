{"version":3,"sources":["../src/albumsModule/_albumsModule.js","../src/albumsModule/albumsCtrl.js","../src/albumsModule/humanizeStarsFilter.js","../src/app.js","../src/appSetup/appInit.js","../src/filtersModule/_filtersModule.js","../src/filtersModule/filtersInterface.js","../src/filtersModule/filtersPhraseCtrl.js","../src/observableModule/_observableModule.js","../src/observableModule/observable.js"],"names":[],"mappings":"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","file":"monolith.js","sourcesContent":["// -----------------------------------------------------------------------------\n// albumsModule for displaying a list of albums, uses some modules for filtering\n// -----------------------------------------------------------------------------\n\nangular.module(\"albumsModule\", [\"filtersModule\"]);\n","// -----------------------------------------------------------------------------\n// albumsCtrl -- displays a filtered list of albums\n// -----------------------------------------------------------------------------\n\nclass albumsController {\n  static initClass() {\n    albumsController.$inject = [\"$window\", \"filtersInterface\"];\n  }\n\n  constructor($window, filtersInterface) {\n    this._$window = $window;\n\n    // THE list\n    this.list = this._getListFromBackendData();\n\n    // use the function from interface\n    this.matchAlbum = filtersInterface.matchAlbum.bind(filtersInterface);\n  }\n\n  _getListFromBackendData() {\n    if (typeof this._$window.albumsData === \"object\") {\n      return this._$window.albumsData.list;\n    } else {\n      return [];\n    }\n  }\n}\n\nalbumsController.initClass();\n\nangular.module(\"albumsModule\").controller(\"albumsCtrl\", albumsController);\n","// -----------------------------------------------------------------------------\n// humanizeStars filter returns a string of 5 stars with fulls and empties\n// -----------------------------------------------------------------------------\n\nangular.module(\"albumsModule\").filter(\"humanizeStars\", () => {\n  return function (numberOfStars) {\n    return \"\\u2605\".repeat(numberOfStars) + \"\\u2606\".repeat(5 - numberOfStars);\n  };\n});\n","// -----------------------------------------------------------------------------\n// linkterAppModule is our single ngApp module for whole web app\n// -----------------------------------------------------------------------------\n\nangular.module(\"linkterAppModule\", [\"albumsModule\", \"angular.filter\"]);\n","// -----------------------------------------------------------------------------\n// tweak default angular configuration\n// -----------------------------------------------------------------------------\n\nangular.module(\"linkterAppModule\").config([\n  \"$interpolateProvider\",\n  \"$compileProvider\",\n  ($interpolateProvider, $compileProvider) => {\n    // unfortunately we can't use \"{{ symbols }}\" because Jekyll uses them\n    $interpolateProvider.startSymbol(\"[[\");\n    $interpolateProvider.endSymbol(\"]]\");\n\n    // We're disabling angular debug info - significant performance boost\n    $compileProvider.debugInfoEnabled(false);\n    // Don't look for directives in comments and classes (~10% boost)\n    $compileProvider.commentDirectivesEnabled(false);\n    $compileProvider.cssClassDirectivesEnabled(false);\n  }\n]);\n","// -----------------------------------------------------------------------------\n// filtersModule for displaying a bunch of filters for albums\n// -----------------------------------------------------------------------------\n\nangular.module(\"filtersModule\", [\"observableModule\"]);\n","// -----------------------------------------------------------------------------\n// filtersInterface keeps current filters value\n// -----------------------------------------------------------------------------\n\nclass FiltersInterfaceService {\n  constructor() {\n    this._phrase = null;\n  }\n\n  setPhrase(phrase) {\n    // we want to keep the phrase lowercased for easier comparison\n    this._phrase = String(phrase).toLowerCase();\n  }\n\n  matchAlbum(album) {\n    // check album by title, artist, decade and stars\n    if (\n      _.isEmpty(this._phrase) ||\n      album.title.toLowerCase().includes(this._phrase) ||\n      album.artist.toLowerCase().includes(this._phrase) ||\n      album.decade.toLowerCase().includes(this._phrase) ||\n      String(album.year) === this._phrase ||\n      String(album.stars) === this._phrase\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nangular\n  .module(\"filtersModule\")\n  .service(\"filtersInterface\", FiltersInterfaceService);\n","// -----------------------------------------------------------------------------\n// filtersPhraseCtrl -- handles a text input value for matching by phrase\n// -----------------------------------------------------------------------------\n\nclass FiltersPhraseController {\n  static initClass() {\n    FiltersPhraseController.$inject = [\"filtersInterface\"];\n  }\n\n  constructor(filtersInterface) {\n    this._filtersInterface = filtersInterface;\n    this.value = \"\";\n    this.dispatchValue();\n  }\n\n  dispatchValue() {\n    this._filtersInterface.setPhrase(this.value);\n  }\n}\n\nFiltersPhraseController.initClass();\n\nangular\n  .module(\"filtersModule\")\n  .controller(\"filtersPhraseCtrl\", FiltersPhraseController);\n","// -----------------------------------------------------------------------------\n// observableModule is for managing a list of observers.\n// -----------------------------------------------------------------------------\n\nangular.module(\"observableModule\", []);\n","// -----------------------------------------------------------------------------\n// observable is a factory that creates a new instance of observer pattern.\n// It handles adding observers, running them and removing.\n// Any service that would like to keep a list of observers of some kind, can\n// easily use this object for handling common logic of keeping and controlling\n// sets of callback (observers) functions.\n// -----------------------------------------------------------------------------\n\nclass ObservableModel {\n  constructor() {\n    this._observers = [];\n    this._amountOfObservers = 0;\n    this._observersToRemove = [];\n    this._amountToRemove = 0;\n    this._stateObservers = [];\n    this._isActive = false;\n  }\n\n  _createCancelFunction(observerToCancel, afterCancelCallback) {\n    return () => {\n      afterCancelCallback(observerToCancel);\n      observerToCancel = null;\n      afterCancelCallback = null;\n    };\n  }\n\n  _afterCancel(observerToRemove) {\n    this._amountToRemove = this._observersToRemove.push(observerToRemove);\n  }\n\n  _cleanRemovedObservers() {\n    for (const observerToRemove of this._observersToRemove) {\n      const indexOf = this._observers.indexOf(observerToRemove);\n      if (indexOf !== -1) {\n        this._observers.splice(indexOf, 1);\n      }\n    }\n\n    this._amountOfObservers = this._observers.length;\n    this._amountToRemove = 0;\n    this._observersToRemove.length = 0;\n    this._updateState(this._amountOfObservers > 0);\n  }\n\n  _updateState(newActiveState) {\n    if (this._isActive === newActiveState) {\n      return;\n    }\n\n    this._isActive = newActiveState;\n\n    for (const stateObserver of this._stateObservers) {\n      stateObserver(this._isActive);\n    }\n  }\n\n  register(newObserver) {\n    this._amountOfObservers = this._observers.push(newObserver);\n    this._updateState(true);\n    return this._createCancelFunction(\n      newObserver,\n      this._afterCancel.bind(this)\n    );\n  }\n\n  notify(...args) {\n    if (this._amountToRemove !== 0) {\n      this._cleanRemovedObservers();\n    }\n\n    if (!this._isActive) {\n      return;\n    }\n\n    if (this._amountOfObservers === 1) {\n      this._observers[0].apply(null, args);\n      return;\n    }\n\n    for (const observer of this._observers) {\n      observer(...args);\n    }\n  }\n\n  onStateChange(stateObserver) {\n    return this._stateObservers.push(stateObserver);\n  }\n}\n\nangular.module(\"observableModule\").factory(\"Observable\", () => {\n  return ObservableModel;\n});\n"]}